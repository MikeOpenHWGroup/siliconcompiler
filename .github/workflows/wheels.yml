name: Wheels

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.options.os }}
    runs-on: ${{ matrix.options.os }}
    strategy:
      fail-fast: false
      matrix:
        options:
        - os: ubuntu-latest
          python: "cp36-* cp37-* cp38-* cp39-* cp310-*"
        - os: macos-latest
          python: "cp36-* cp37-* cp38-*"
        - os: macos-latest
          python: "cp39-* cp310-*"
        - os: windows-latest
          python: "cp36-* cp37-* cp38-* cp39-* cp310-*"

    steps:
    - uses: actions/checkout@v2

    - name: Get Surelog version
      id: get-surelog
      run: |
        echo "::set-output name=version::$(git rev-parse HEAD:third_party/tools/surelog)"

    - uses: actions/cache@v2
      id: surelog-cache
      if: matrix.options.os != 'ubuntu-latest'
      with:
        path: |
          siliconcompiler/tools/surelog/bin/surelog*
          siliconcompiler/tools/surelog/lib/surelog/sv/builtin.sv
        key: ${{ matrix.options.os }}-${{ steps.get-surelog.outputs.version }}

    - name: Setup env (Windows)
      if: matrix.options.os == 'windows-latest'
      run: |
        choco install -y graphviz winflexbison3
        vcpkg install zlib zlib:x64-windows
        .github/workflows/bin/install_klayout_win.bat

    - name: Setup env (macOS)
      if: matrix.options.os == 'macos-latest'
      run: |
        brew install graphviz
        brew install --cask klayout
        # https://github.com/ponty/PyVirtualDisplay/blob/master/.github/workflows/main.yml#L45
        brew install --cask xquartz
        echo "/opt/X11/bin" >> $GITHUB_PATH
        mkdir /tmp/.X11-unix
        sudo chmod 1777 /tmp/.X11-unix
        sudo chown root /tmp/.X11-unix

    - name: Build Surelog (Windows)
      if: matrix.options.os == 'windows-latest' && steps.surelog-cache.outputs.cache-hit != 'true'
      run: .github/workflows/bin/install_surelog_win.bat

    - name: Build Surelog (macOS)
      if: matrix.options.os == 'macos-latest' && steps.surelog-cache.outputs.cache-hit != 'true'
      run: .github/workflows/bin/install_surelog_macos.sh

    - uses: pypa/cibuildwheel@v2.3.1
      env:
        CIBW_BEFORE_ALL_LINUX: >
          export PREFIX={package}/siliconcompiler/tools/surelog &&
          {package}/.github/workflows/bin/setup_wheel_env_linux.sh
        CIBW_ENVIRONMENT_WINDOWS: SC_CMAKEARGS="-DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake."
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_BUILD: ${{ matrix.options.python }}
        CIBW_SKIP: "*win32 *i686"
        MACOSX_DEPLOYMENT_TARGET: "10.15"
        CIBW_ARCHS_MACOS: x86_64 arm64
        CIBW_TEST_SKIP: "*_arm64"
        CIBW_TEST_EXTRAS: test
        CIBW_TEST_COMMAND: >
          pytest --import-mode=append {package}/tests/ -m "not eda" &&
          pytest --import-mode=append {package}/tests/tools/test_surelog.py &&
          pytest --import-mode=append {package}/tests/core/test_show.py
    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl

  publish:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published' && !contains(github.event.release.body, 'NOPUBLISH')

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_DEPLOY }}
